{"version":3,"sources":["components/Home.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","input","setInput","error","setError","history","useHistory","regex","className","aria-hidden","height","role","viewBox","width","style","display","fill","userSelect","verticalAlign","fillRule","d","fontSize","autoComplete","onSubmit","e","preventDefault","test","fetch","then","res","json","message","push","pathname","search","state","catch","err","console","log","type","id","onChange","target","value","GhPolyglot","require","Profile","props","data","setData","date","setDate","rate","setRate","randomColor","r","Math","floor","random","g","b","a","location","useEffect","created_at","Date","i","toLocaleString","undefined","year","month","day","me","userStats","stats","newStats","arrRandomColor","length","ctx","document","getElementById","Chart","labels","map","label","datasets","backgroundColor","borderWidth","getAllRepos","remaining","src","avatar_url","alt","name","href","html_url","rel","login","public_repos","followers","following","textAlign","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d38af039.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  // regex\r\n  let regex = /\\w+/g;\r\n  function submit(e) {\r\n    e.preventDefault();\r\n    if (regex.test(input)) {\r\n      fetch(`https://api.github.com/users/${input}`)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.message !== \"Not Found\") {\r\n            history.push({\r\n              pathname: \"/profile\",\r\n              search: input,\r\n              state: input,\r\n            });\r\n          } else {\r\n            setError('Profile not found')\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setError('Please enter a character')\r\n    }\r\n    setInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        className=\"octicon\"\r\n        height=\"64\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 16 16\"\r\n        width=\"64\"\r\n        style={{\r\n          display: \"inline-block\",\r\n          fill: \"currentcolor\",\r\n          userSelect: \"none\",\r\n          verticalAlign: \"text-bottom\",\r\n        }}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\r\n        ></path>\r\n      </svg>\r\n      <h1 style={{ fontSize: \"2.5rem\" }}>Find Your Github Profile</h1>\r\n      <form autoComplete=\"off\" onSubmit={submit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"input\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n      </form>\r\n      <p>{error && error }</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nvar GhPolyglot = require(\"gh-polyglot\");\r\n\r\nfunction Profile(props) {\r\n  const [data, setData] = useState([]);\r\n  const [date, setDate] = useState(\"\");\r\n  const [rate, setRate] = useState(\"\");\r\n  // const [repos, setRepos] = useState([]);\r\n  // const [num, setNum] = useState(6);\r\n  // random colors\r\n  function randomColor() {\r\n    let r = Math.floor(Math.random() * 255);\r\n    let g = Math.floor(Math.random() * 255);\r\n    let b = Math.floor(Math.random() * 255);\r\n    let a = Math.floor(Math.random()) + 1;\r\n    let randomColor = `rgba(${r}, ${g}, ${b}, ${a})`;\r\n    return randomColor;\r\n  }\r\n  // avatar_url, login, followers, following, public_repos, url, company, location, created_at, name\r\n  const input = props.location.state;\r\n  useEffect(() => {\r\n    fetch(`https://api.github.com/users/${input}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setData(res);\r\n        setDate(res.created_at);\r\n        let x = new Date(res.created_at);\r\n        return x;\r\n      })\r\n      .then((i) => {\r\n        const option = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n        setDate(i.toLocaleString(undefined, option));\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // random background color\r\n    const me = new GhPolyglot(input);\r\n    me.userStats(function (err, stats) {\r\n      let newStats = [];\r\n      if (stats !== undefined) {\r\n        newStats = stats;\r\n        var arrRandomColor = [];\r\n        for (let i = 0; i < stats.length; i++) {\r\n          arrRandomColor.push(randomColor());\r\n        }\r\n      }\r\n      var ctx = document.getElementById(\"myChart\");\r\n      // eslint-disable-next-line\r\n      var myChart = new Chart(ctx, {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: newStats.length !== 0 ? newStats.map((i) => i.label) : null,\r\n          datasets: [\r\n            {\r\n              label: \"Top Languages\",\r\n              data: newStats.length !== 0 ? newStats.map((i) => i.value) : null,\r\n              backgroundColor: arrRandomColor,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    });\r\n    // let repoStars = [];\r\n    // let repoSize = [];\r\n    // let repoForks = [];\r\n    me.getAllRepos(function (err, stats) {\r\n      // let repos = [];\r\n      // if (stats === undefined) {\r\n      //   console.log(\"empty\");\r\n      // } else {\r\n      //   repos = stats;\r\n      // }\r\n      // // language, url\r\n      // // console.log(err || stats);\r\n      // repoStars =\r\n      //   repos.length !== 0\r\n      //     ? repos.map((i) => {\r\n      //         return [i.stargazers_count, i.name];\r\n      //       })\r\n      //     : null;\r\n      // repoSize = repos.length !== 0 ? repos.map((i) => i.size) : null;\r\n      // repoForks = repos.length !== 0 ? repos.map((i) => i.forks_count) : null;\r\n    });\r\n    fetch(\"https://api.github.com/rate_limit\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setRate(res.rate.remaining);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // fetch(`https://api.github.com/users/${input}/repos`)\r\n    // .then(res => res.json())\r\n    // .then(res => {\r\n    //   let repos = [];\r\n    //   repos = res;\r\n    //   let repoStars = []\r\n    //   repoStars = repos.map(i => i.stargazers_count)\r\n    //   console.log(repoStars.sort((a , b) => b - a));\r\n    // })\r\n    // .catch(err => console.log(err))\r\n  }, [input]);\r\n  // function loadMore() {\r\n  //   setNum((num) => num + 6);\r\n  //   console.log(repos);\r\n  //   console.log(num);\r\n  // }\r\n  // useEffect(() => {\r\n  //   fetch(`https://api.github.com/users/${input}/repos?per_page=${num}`)\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => {\r\n  //       setRepos(res);\r\n  //       console.log(res);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, [num, input]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"rate\">\r\n        <p>{rate}/60</p>\r\n        <p>Requests Left</p>\r\n      </div>\r\n      <div className=\"image\">\r\n        <img src={data.avatar_url} alt=\"avatar_url\" />\r\n      </div>\r\n      <h1 className=\"name\">{data.name}</h1>\r\n      <h2>\r\n        <a\r\n          href={data.html_url}\r\n          className=\"url\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          @{data.login}\r\n        </a>\r\n      </h2>\r\n      <div className=\"info\">\r\n        <span>\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            className=\"octicon\"\r\n            height=\"16\"\r\n            role=\"img\"\r\n            viewBox=\"0 0 14 16\"\r\n            width=\"14\"\r\n            style={{\r\n              display: \"inline-block\",\r\n              fill: \"currentcolor\",\r\n              userSelect: \"none\",\r\n              verticalAlign: \"text-bottom\",\r\n            }}\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M13 2h-1v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H6v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 12H2V5h11v9zM5 3H4V1h1v2zm6 0h-1V1h1v2zM6 7H5V6h1v1zm2 0H7V6h1v1zm2 0H9V6h1v1zm2 0h-1V6h1v1zM4 9H3V8h1v1zm2 0H5V8h1v1zm2 0H7V8h1v1zm2 0H9V8h1v1zm2 0h-1V8h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1zm2 0h-1v-1h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1z\"\r\n            ></path>\r\n          </svg>\r\n          {\"    Joined \"}\r\n          {date}\r\n        </span>\r\n      </div>\r\n      <div className=\"card-mini\">\r\n        <div className=\"cards\">\r\n          <p>{data.public_repos}</p>\r\n          <p>Repostories</p>\r\n        </div>\r\n        <div className=\"cards\">\r\n          <p>{data.followers}</p>\r\n          <p>Followers</p>\r\n        </div>\r\n        <div className=\"cards\">\r\n          <p>{data.following}</p>\r\n          <p>Following</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"stats\">\r\n        <div className=\"lang\">\r\n          <h2>Top languages</h2>\r\n          <canvas id=\"myChart\"></canvas>\r\n        </div>\r\n      </div>\r\n      <div className=\"repos\">\r\n        <h2 style={{ textAlign: 'center'}}>Repositories</h2>\r\n        {/* <div className=\"repo\">\r\n          {repos.length !== 0\r\n            ? repos.map((i) => (\r\n                <div className=\"card\" key={i.id}>\r\n                    <h2>{i.name}</h2>\r\n                    <div className=\"tags\">\r\n                      <p><i className=\"fa fa-language\"></i>{i.language}</p>\r\n                      <p><i className=\"fa fa-star\"></i>{i.stargazers_count}</p>\r\n                      <p><i className=\"fa fa-utensils\"></i>{i.forks_count}</p>\r\n                      <p><i className=\"fa fa-size\"></i>{i.size}kb</p>\r\n                      <p><a href={i.html_url} target='_blank' rel=\"noopener noreferrer\"><i className=\"fa fa-github\"></i>Repo Link</a></p>\r\n                    </div>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div> */}\r\n      </div>\r\n        {/* <button onClick={loadMore}>Load More Repos</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Home from './components/Home';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Profile from './components/Profile';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/profile' exact component={Profile} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}